generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id           String    @id
  displayName  String
  username     String    @unique
  email        String?   @unique
  googleId     String?   @unique
  passwordHash String?
  avatarUrl    String?
  bio          String?
  sessions     Session[]
  posts        Post[]
  likes        Like[]
  following    Follow[]  @relation("Following")
  followers    Follow[]  @relation("Followers")

  createdAt DateTime @default(now())

  @@map("users")
}

model Session {
  id     String @id
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  expiresAt DateTime

  @@map("sessions")
}

model Follow {
  followerId  String
  follower    User   @relation("Following", fields: [followerId], references: [id], onDelete: Cascade)
  followingId String
  following   User   @relation("Followers", fields: [followingId], references: [id], onDelete: Cascade)

  @@unique([followerId, followingId])
  @@map("follows")
}

model Post {
  id          String  @id @default(cuid())
  content     String
  attachments Media[]
  likes       Like[]
  userId      String
  user        User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())

  @@map("posts")
}

model Media {
  id     String    @id @default(cuid())
  type   MediaType
  url    String
  postId String?
  post   Post?     @relation(fields: [postId], references: [id], onDelete: SetNull)

  createdAt DateTime @default(now())

  @@map("post_media")
}

enum MediaType {
  IMAGE
  VIDEO
}

model Like {
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  postId String
  post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@unique([userId, postId])
  @@map("likes")
}
